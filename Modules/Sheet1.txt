VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
END
Attribute VB_Name = "Sheet1"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Option Explicit

Dim lastCellRange As Range
Dim pieChart As Excel.shape
Dim tempAddy As String

'*************************************************************
'*************************************************************
'*                  ShopStatus
'*
'*************************************************************
'*************************************************************


'************************************************************
'*************   Cleanup/Fill Routines   ********************
'************************************************************


Public Sub Cleanup()
    Unprotect PASSWORD:=Config.PASSWORD
    With Rows("1:100")
        .Clear
        .RowHeight = 18
    End With
    Cells.NumberFormat = "@"
    Set lastCellRange = Nothing
    
    Call DestroyCharts
End Sub


Public Sub AddCell(cellName As String)
    If lastCellRange Is Nothing Then
        Set lastCellRange = Range("A1")
    Else
        Set lastCellRange = lastCellRange.Offset(2, 0)
    End If
    
    Dim headerRange As Range
    Set headerRange = Range("A" & lastCellRange.Row & ":" & "H" & lastCellRange.Row)
    With headerRange
        .Font.ColorIndex = 2
        .Font.Size = 8
        .HorizontalAlignment = xlCenter
        .Interior.color = RGB(128, 128, 128)
    End With
    With lastCellRange
        .Value = cellName
        .Font.Bold = True
        .Font.ColorIndex = 2
        .Font.Size = 11
        .HorizontalAlignment = xlCenter
    End With
    
    lastCellRange.Offset(0, 1).Value = "Machine"
    lastCellRange.Offset(0, 2).Value = "Job#"
    lastCellRange.Offset(0, 3).Value = "Drawing#"
    lastCellRange.Offset(0, 4).Value = "Part#"
    lastCellRange.Offset(0, 5).Value = "Rev"
    lastCellRange.Offset(0, 6).Value = "Desc"
    lastCellRange.Offset(0, 7).Value = "Status"

    lastCellRange.EntireRow.RowHeight = 14

End Sub


Public Sub AddJob(jobInfo() As Variant)
    'TODO: check if the lastCellRange is Nothing, in which case, we should error out
    Set lastCellRange = lastCellRange.Offset(1, 0)
    Dim jobRange As Range
    Set jobRange = Range("B" & lastCellRange.Row & ":" & "H" & lastCellRange.Row)
    jobRange = jobInfo
    jobRange.HorizontalAlignment = xlCenter
    With jobRange.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .color = RGB(128, 128, 128)
        .Weight = xlThin
    End With
    
    Range("G" & lastCellRange.Row).HorizontalAlignment = xlLeft
    If lastCellRange.Offset(0, 7).Value = "[Setup]" Then
        lastCellRange.EntireRow.Font.color = RGB(128, 128, 128)
    End If
    SetPicture Range("H" & lastCellRange.Row)
    
    
End Sub

Private Sub SetPicture(Target As Range)
    Dim picture As Object
    Dim picAddy As String
    Dim colorFill As Single
    
        'TODO: we want to establish a warning sign based on the desired amount of inspections to alert the PQCI
    Select Case Target.Value
        Case "[Setup]"   'When setup is not 100%, There isnt going to be much to see here
            picAddy = "https://cdn.hubblecontent.osi.office.net/icons/publish/icons_gears/gears.svg"
            colorFill = RGB(128, 128, 128)
        Case "[Production]"  'TODO: might get rid of this, I can usually assume that its in production
'            picAddy = "https://cdn.hubblecontent.osi.office.net/icons/publish/icons_arrowcircle/arrowcircle.svg"
        Case Else  'Question Mark - issue with retriveing the data
            picAddy = "https://cdn.hubblecontent.osi.office.net/icons/publish/icons_questionmark_ltr/questionmark_ltr.svg"
            Exit Sub
    End Select
    
    Target.Value = ""
    If picAddy = "" Then Exit Sub
    Set picture = Shapes.AddPicture(picAddy, False, True, Top:=Target.Top, left:=Target.left + 15, Height:=20, Width:=20)
    
    If colorFill <> 0 Then
        picture.Fill.ForeColor.RGB = colorFill
    End If
    
End Sub

Public Sub FinishTransfer()
    Protect PASSWORD:=Config.PASSWORD
    tempAddy = lastCellRange.Address
End Sub

Public Sub DestroyCharts()
    Me.Unprotect PASSWORD:=Config.PASSWORD

    On Error Resume Next
    Me.Shapes("PrdHours").Delete
'    Dim im As Excel.shape
'    For Each im In Me.Shapes
'        im.Delete
'    Next im
    
    Set pieChart = Nothing
End Sub



'************************************************************
'****************   Event Callbacks   ***********************
'************************************************************



Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    'TODO: temp manual setting until we figure out what to do with this missing reference
    If Target.Areas.Count <> 1 Then Exit Sub
    If Target.Count <> 1 Then Exit Sub
    
    
    Dim validSelection As Boolean

    'TODO dont hardset the range here, must find it manually
    If lastCellRange Is Nothing Then
        Set lastCellRange = Range("A25")
    End If
    
    On Error GoTo selectionErr
    
    Me.Unprotect Config.PASSWORD
    
    
        'If user selected information about the active job in the Viewport
    If Not (Application.Intersect(Range("K2:K8"), Target) Is Nothing) Then
        Range("J2:J8").Value = ""
        Target.Offset(0, -1).Value = ">"
        Range("K2:N8").Interior.ColorIndex = 0
        Range(Target.Address & ":N" & Target.Row).Interior.color = RGB(101, 215, 255)
        
    
    Else  'If user selected a new job Row
        Dim jobCell As Range
        Dim jobRange As Range
        Set jobRange = Range("A1:" & lastCellRange.Address).Offset(0, 1)
        
        
        For Each jobCell In jobRange
                'reset previously highlighted cells to blank
            If jobCell.Interior.color = RGB(101, 215, 255) Then
                Range("B" & jobCell.Row & ":" & "H" & jobCell.Row).Interior.ColorIndex = 0
            End If
    
                'set the intersection row of the selected job to blue bg
            If Not (Application.Intersect(jobCell, Target.EntireRow) Is Nothing) And jobCell.Interior.color <> RGB(128, 128, 128) Then
                Range("B" & jobCell.Row & ":" & "H" & jobCell.Row).Interior.color = RGB(101, 215, 255)
                validSelection = True
            End If
    
        Next jobCell
        
        If validSelection = False Then GoTo 10  'If they selected a header or something then leave after unsetting the previous selection
        
        Dim jobNum As String
        jobNum = Target.Offset(0, GetCol("Job#") - Target.Column).Value
        If jobNum = "" Then GoTo 10
        Dim rowNum As Integer
        rowNum = Sheets("ShopLoad").Range("D2:D" & Sheets("ShopLoad").Range("D2").End(xlDown).Row).Find(What:=jobNum, _
                                                LookIn:=xlValues, MatchCase:=False, SearchFormat:=False).Row
                                                
        'TODO: Add in a call to the JobView port to update its information
        Call updatedJobInfo(rowNumber:=rowNum)
                                                
                                                
        'TODO: this will end up being replaced with a call to select the Hours Remaining Row of the newly added job
        'which will implicity call the update to the pie chart for the Hours of production
        Call CreatePrdHoursChart(rowNum:=rowNum)
            
        
    End If
    
    
    
10
    
    Me.Protect Config.PASSWORD
    Exit Sub
    
selectionErr:
    GoTo 10

End Sub

'************************************************************
'****************   JobInfo Viewport   **********************
'************************************************************
Private Sub updatedJobInfo(rowNumber As Integer)
    Dim indRange As Range
    Set indRange = Sheets("ShopLoad").Range("A" & rowNumber)
    
    Range("K1").Value = indRange.Offset(0, Sheets("ShopLoad").GetCol("JobNum") - indRange.Column).Value  'Job# Header
    Range("K3").Value = indRange.Offset(0, Sheets("ShopLoad").GetCol("FA Type") - indRange.Column).Value
    Range("M3").Value = indRange.Offset(0, Sheets("ShopLoad").GetCol("Set%") - indRange.Column).Value & "%"
    
    If Range("M3").Value = "100%" Then
        Range("N3").Value = "þ"
    Else
        Range("N3").Value = "o"
    End If
    
    Range("N5").Value = indRange.Offset(0, Sheets("ShopLoad").GetCol("AQL") - indRange.Column).Value
    Range("K7").Value = indRange.Offset(0, Sheets("ShopLoad").GetCol("Qty Complete") - indRange.Column).Value
    Range("M7").Value = indRange.Offset(0, Sheets("ShopLoad").GetCol("Run Qty") - indRange.Column).Value
    Range("N8").Value = indRange.Offset(0, Sheets("ShopLoad").GetCol("Est Rem Hrs") - indRange.Column).Value

End Sub



'************************************************************
'****************   Chart  Routines   ***********************
'************************************************************

Public Sub CreatePrdHoursChart(rowNum As Integer)


    'TODO: we are disabling events here because of selecting the charts
        'but prob want to do this at a higher level since we'll be adding/changin multiple charts
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    
    If pieChart Is Nothing Then
        'If we haven't made a chart yet
            'Create new at the top left of the DashView
        Set pieChart = Me.Shapes.AddChart2(-1, xlDoughnutExploded, left:=891, Top:=ActiveWindow.VisibleRange.Top + 5, Height:=100, Width:=140)
        pieChart.Title = ""
        
        With pieChart.Chart
            .ChartTitle.Delete
            .SeriesCollection(1).XValues = Sheets("ShopLoad").Range("$I$1:$J$1").Value
            .SeriesCollection(1).Values = Sheets("ShopLoad").Range("$I$" & rowNum & ":$J$" & rowNum)
            .SeriesCollection(1).Points(1).Format.Fill.ForeColor.RGB = Config.COLOR_PURPLE
            .SeriesCollection(1).Points(2).Format.Fill.ForeColor.RGB = Config.COLOR_BLUE
            .SeriesCollection(1).ApplyDataLabels HasLeaderLines:=False, ShowSeriesName:=False, ShowCategoryName:=False, ShowPercentage:=True, ShowValue:=True
            .ChartGroups(1).DoughnutHoleSize = 73
            .Legend.Position = xlRight
            .Legend.Height = 40
            .Legend.Top = 40
            .Legend.left = 80
            .SeriesCollection(1).DataLabels.Select
            Selection.Format.Fill.Visible = 0
            Selection.Format.Line.Visible = 0
            
        End With
    Else
        'If we already have a chart
            'Reset the Hours with the values from the new job
        pieChart.Chart.SeriesCollection(1).Values = Sheets("ShopLoad").Range("$I$" & rowNum & ":$J$" & rowNum)
        pieChart.Chart.SeriesCollection(1).ApplyDataLabels HasLeaderLines:=False, ShowSeriesName:=False, ShowCategoryName:=False, ShowValue:=True, ShowPercentage:=True
    End If
    
        'New/Update Parameters
            'have to reset some values of the datalabels regardless of new/used chart
    With pieChart.Chart
        .SeriesCollection(1).Points(1).Format.Fill.ForeColor.RGB = Config.COLOR_PURPLE  'Todo: instead we should ask an outside function to do this
        .SeriesCollection(1).Points(2).Format.Fill.ForeColor.RGB = Config.COLOR_BLUE
        .SeriesCollection(1).Explosion = 4
        .SeriesCollection(1).DataLabels.Select
        Selection.Separator = "" & Chr(13) & ""
        .SeriesCollection(1).Points(2).DataLabel.Select
        Selection.left = 0
        Selection.Top = 0
        Selection.Width = 40
        Selection.Height = 25
        .SeriesCollection(1).Points(1).DataLabel.Select
        Selection.left = 40
        Selection.Top = 0
        Selection.Width = 40
        Selection.Height = 25
    End With
'    pieChart.OnAction = "ThisWorkbook.PrdHours_Click"
    pieChart.Name = "PrdHours"
    
    
    'TODO: again, this should prob be at a higher level
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
End Sub

Public Sub CreateProdQtyChart()
    Me.Unprotect PASSWORD:=Config.PASSWORD
    
    Dim myChart As shape
    Set myChart = Me.Shapes.AddChart2(-1, xlLineMarkers, left:=650, Top:=ActiveWindow.VisibleRange.Top + 360, Height:=170, Width:=415)
'    myChart.Title = "dcasdfc"
    myChart.Chart.ChartTitle.Text = "Production Qty Submitted"
    
    With myChart.Chart
'        .ChartTitle.Delete
        .SeriesCollection.NewSeries
        .SeriesCollection(1).Values = Sheets("ProdInfo").Range("$B$2:$B$16")
        .SeriesCollection(1).XValues = Sheets("ProdInfo").Range("$A$2:$A$16").Value
        .ApplyChartTemplate ("C:\Users\mdieckman\AppData\Roaming\Microsoft\Templates\Charts\LineSeries.crtx")
    End With
    
    myChart.Name = "TempName"
    
End Sub

Public Sub destroyNewChart()
    Me.Unprotect PASSWORD:=Config.PASSWORD
    On Error Resume Next
    Me.Shapes("TempName").Delete
    Me.Protect PASSWORD:=Config.PASSWORD


End Sub


'************************************************************
'****************   Helper Functions   **********************
'************************************************************


'Return column # of the header
Public Function GetCol(colName As String) As Integer
    Dim colRange As Range
    Set colRange = Range("A1:H1")
    On Error Resume Next
    GetCol = Application.WorksheetFunction.Match(colName, colRange, 0)
    If Err.Number <> 0 Then
        GetCol = 0
    End If
    On Error GoTo 0
End Function


